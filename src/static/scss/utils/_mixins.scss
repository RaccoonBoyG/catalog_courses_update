@function rem($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return calc($pixels / $context) * 1rem;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin placeholder {
  ::-webkit-input-placeholder {
    @content;
  }
  :-moz-placeholder {
    @content;
  }
  ::-moz-placeholder {
    @content;
  }
  :-ms-input-placeholder {
    @content;
  }
}

// 1. Словарь ваших брейкпоинтов
$breakpoints: (
  lg-desktop: (
    min: $lgDesktopWidth,
  ),
  desktop: (
    min: $desktopWidth,
  ),
  sm-desktop: (
    min: $smDesktopWidth,
    max: $desktopWidth - 1,
  ),
  tablet: (
    min: $tableWidth,
    max: $smDesktopWidth - 1,
  ),
  phone: (
    min: $phoneWidth,
    max: $tableWidth - 1,
  ),
  sm-phone: (
    min: $smPhoneWidth,
    max: $phoneWidth - 1,
  ),
  xs-phone: (
    max: $smPhoneWidth - 1,
  ),
);

// 2. Миксин, генерирующий _отдельный_ @media на каждую ключ-точку
@mixin media($keys...) {
  @each $key in $keys {
    $point: map-get($breakpoints, $key);
    @if $point == null {
      @error "Unknown breakpoint `#{$key}` in @include media.";
    }

    // Начинаем строку запроса
    $media-query: 'only screen';

    // Добавляем условие min-width, если есть
    @if map-has-key($point, min) {
      $media-query: '#{$media-query} and (min-width: #{map-get($point, min)})';
    }
    // Добавляем условие max-width, если есть
    @if map-has-key($point, max) {
      $media-query: '#{$media-query} and (max-width: #{map-get($point, max)})';
    }

    // Вот тут выводим уже готовую строку без запятых внутри
    @media #{$media-query} {
      @content;
    }
  }
}

// Media Query Mixins
@mixin lg-desktop {
  @media only screen and (min-width: $lgDesktopWidth) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: $desktopWidth) {
    @content;
  }
}

@mixin sm-desktop {
  @media only screen and (min-width: $smDesktopWidth) and (max-width: $desktopWidth - 1) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (min-width: $tableWidth) and (max-width: $smDesktopWidth - 1) {
    @content;
  }
}

@mixin phone {
  @media only screen and (min-width: $phoneWidth) and (max-width: $tableWidth - 1) {
    @content;
  }
}

@mixin sm-phone {
  @media only screen and (min-width: $smPhoneWidth) and (max-width: $phoneWidth - 1) {
    @content;
  }
}

@mixin xs-phone {
  @media only screen and (max-width: $smPhoneWidth - 1) {
    @content;
  }
}

// Common Utility Classes
@mixin back-img-style($gradient-pos, $img-pos, $size) {
  background-image: linear-gradient(
      141deg,
      $shades-gradient_1 0%,
      $shades-gradient_2 40%,
      rgba(247, 247, 247, 0) 60%
    ),
    url('https://edcrunch.urfu.ru/assets/images/banner/1-02_2019.png');
  background-position: $img-pos;
  background-repeat: no-repeat;
  background-size: auto $size;
  height: 150px;
}

@mixin teacher-style {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding: 1rem;
  border-radius: 8px;
  margin-bottom: 0;
  background: white;
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);
  border: 2px solid white;

  .teacher-image {
    width: 100%;
    display: flex;
    justify-content: left;
    margin-bottom: 1rem;

    img {
      @include teacher-image-style(120px);
    }
  }

  h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: #333;
    text-align: left;
  }

  p {
    margin: 0;
    font-size: 0.9rem;
    color: #666;
    line-height: 1.4;
    text-align: left;
  }
}
// Миксин для мобильной версии
@mixin teacher-style-mobile {
  padding: 1.25rem;

  .teacher-image img {
    @include teacher-image-style(120px);
  }

  h3 {
    font-size: 1.15rem;
    margin-bottom: 0.5rem;
  }

  p {
    font-size: 0.9rem;
  }
}

// Миксин для изображений преподавателей
@mixin teacher-image-style($size) {
  width: $size;
  height: $size;
  border-radius: 50%;
  object-fit: cover;
  border: 3px solid #f8f9fa;
}

@mixin img-about-size($size) {
  max-height: $size;
  max-width: $size;
}
